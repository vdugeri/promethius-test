{"version":3,"sources":["components/Home.js","types/index.js","components/TableHead.js","components/Country.js","components/table-utils/index.js","components/Table.js","components/Countries.js","actions/countries.js","components/Navbar.js","App.js","reducers/index.js","reducers/countries.js","store.js","serviceWorker.js","index.js"],"names":["Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","regions","map","region","index","react_default","a","createElement","Button_default","key","variant","color","href","concat","className","Component","GET_COUNTRY","rows","id","numeric","disablePadding","label","EnhancedTableHead","createSortHandler","property","event","onRequestSort","_this2","_this$props","order","orderBy","TableHead_default","TableRow_default","row","TableCell_default","align","padding","sortDirection","Tooltip_default","title","placement","enterDelay","TableSortLabel_default","active","direction","onClick","React","Country","_ref","country","classes","open","handleClose","languages","language","name","Modal_default","aria-labelledby","aria-describedby","onClose","style","position","top","left","transform","paper","Card_default","card","CardActionArea_default","CardContent_default","src","flag","alt","Typography_default","gutterBottom","component","population","area","alpha2Code","capital","timezones","length","CardActions_default","size","desc","b","EnhancedTable","selected","page","rowsPerPage","showModal","handleRequestSort","setState","handleClick","payload","countries","dispatch","type","handleChangePage","handleChangeRowsPerPage","target","value","isSelected","indexOf","_this$state","data","density","emptyRows","Math","min","react","Paper_default","root","tableWrapper","Table_default","table","components_TableHead","rowCount","TableBody_default","array","cmp","stabilizedThis","el","sort","stableSort","getSorting","slice","n","hover","role","aria-checked","tabIndex","scope","height","colSpan","TablePagination_default","rowsPerPageOptions","count","backIconButtonProps","aria-label","nextIconButtonProps","onChangePage","onChangeRowsPerPage","keys","components_Country","connect","withStyles","theme","width","marginTop","marginLeft","marginRight","minWidth","overflowX","Countries","onFetchCountries","match","params","components_Table","mapActionsToProps","asyncToGenerator","regenerator_default","mark","_callee","endpoint","res","wrap","_context","prev","next","axios","get","sent","stop","_x","apply","arguments","loader","Navbar","bar","flexDirection","alignItems","react_router","_ref2","history","AppBar_default","Grid_default","container","item","md","xs","path","isExact","useCallback","goBack","ArrowBack_default","App","components_Navbar","exact","reducers","combineReducers","undefined","toConsumableArray","filter","allStoreEnhancers","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","Boolean","location","hostname","ReactDOM","render","es","react_router_dom","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.94cafe82.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport '../assets/css/styles.css';\n\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      regions: [\n        \"Africa\",\n        \"Asia\",\n        \"Americas\",\n        \"Europe\",\n        \"Oceania\",\n      ]\n    }\n  }\n\n\n  render() {\n    const regions = this.state.regions.map((region, index) => {\n      return <Button key={index} variant=\"outlined\" color=\"primary\" href={`/regions/${region}`} >{region}</Button >\n    })\n\n    return (\n      <div className=\"home\">\n        <div className=\"hero\">\n          <h2 className=\"hero__header\">You. Me. Everyone.</h2>\n          <div className=\"regions\">\n            {regions}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n","export const FETCH_COUNTRIES = 'countries:fetch';\nexport const GET_COUNTRY = 'country:get';\n","import TableSortLabel from '@material-ui/core/TableSortLabel';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst rows = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Name' },\n  { id: 'population', numeric: true, disablePadding: false, label: 'Population' },\n  { id: 'density', numeric: true, disablePadding: false, label: 'Population Density' },\n];\n\nclass EnhancedTableHead extends React.Component {\n  createSortHandler = property => event => {\n    this.props.onRequestSort(event, property);\n  };\n\n  render() {\n    const { order, orderBy } = this.props;\n\n    return (\n      <TableHead>\n        <TableRow>\n          {rows.map(\n            row => (\n              <TableCell\n                key={row.id}\n                align='left'\n                padding={row.disablePadding ? 'none' : 'default'}\n                sortDirection={orderBy === row.id ? order : false}\n              >\n                <Tooltip\n                  title=\"Sort\"\n                  placement={row.numeric ? 'bottom-end' : 'bottom-start'}\n                  enterDelay={300}\n                >\n                  <TableSortLabel\n                    active={orderBy === row.id}\n                    direction={order}\n                    onClick={this.createSortHandler(row.id)}\n                  >\n                    {row.label}\n                  </TableSortLabel>\n                </Tooltip>\n              </TableCell>\n            ),\n            this,\n          )}\n        </TableRow>\n      </TableHead>\n    );\n  }\n}\n\nEnhancedTableHead.propTypes = {\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nexport default (EnhancedTableHead);\n","import React from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport '../assets/css/styles.css';\n\n\nconst Country = ({ country, classes, open, handleClose }) => {\n  function getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n      position: 'fixed',\n      top: `${top}%`,\n      left: `${left}%`,\n      transform: `translate(-${top}%, -${left}%)`,\n    };\n  }\n\n  const languages = country.languages.map((language, index) => {\n    return (\n      <li key={index}>{language.name}</li>\n    )\n  });\n\n  return (\n    <Modal\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n      open={open}\n      onClose={handleClose}\n    >\n      <div style={getModalStyle()} className={classes.paper}>\n        <Card className={classes.card}>\n          <CardActionArea>\n            <CardContent>\n              <div><img src={country.flag} alt=\"country flag\" className=\"flag\" /></div>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {country.name}\n              </Typography>\n              <div className=\"details\">\n                <span><h3>Population</h3>: {country.population}</span>\n                <span><h3>Area</h3>: {country.area}</span>\n                <span><h3>Alpha2Code</h3>: {country.alpha2Code}</span>\n                <span><h3>Region</h3>: {country.region}</span>\n                <span><h3>Capital</h3>: {country.capital}</span>\n                <span><h3>Timezones</h3>: {country.timezones.length}</span>\n                <span className=\"languages\">\n                  <h3>Languages</h3>\n                  <ul>{languages}</ul>\n                </span>\n\n              </div>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Button size=\"small\" color=\"primary\" onClick={handleClose}>\n              Close\n            </Button>\n          </CardActions>\n        </Card>\n      </div>\n    </Modal>\n  )\n}\n\n\nexport default Country;\n","import { lighten } from '@material-ui/core/styles/colorManipulator';\n\nexport const toolbarStyles = theme => ({\n  root: {\n    paddingRight: theme.spacing.unit,\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n        color: theme.palette.secondary.main,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        cursor: 'pointer',\n      }\n      : {\n        color: theme.palette.text.primary,\n        backgroundColor: theme.palette.secondary.dark,\n      },\n  spacer: {\n    flex: '1 1 100%',\n  },\n  actions: {\n    color: theme.palette.text.secondary,\n  },\n  title: {\n    flex: '0 0 auto',\n  },\n});\n\n\n\nexport function createData(countries) {\n\n  return countries.map((country, index) => {\n    const { name, population, area } = country;    \n    const density = area !== null? population / area : 'Uknown';\n    return { id: index + 1, name, population, density };\n  });\n}\n\nexport function desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nexport function stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nexport function getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n","import React, { Fragment, Component } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TableHead from './TableHead';\nimport Country from './Country';\nimport { connect } from 'react-redux';\nimport { createData, stableSort, getSorting } from './table-utils';\nimport { GET_COUNTRY } from '../types';\n\n\n\nconst styles = theme => ({\n  root: {\n    width: '60%',\n    marginTop: '10rem',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  table: {\n    minWidth: '80%',\n    marginLeft: '20px',\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n});\n\nclass EnhancedTable extends Component {\n  state = {\n    order: 'asc',\n    orderBy: 'name',\n    selected: [],\n    page: 0,\n    rowsPerPage: 5,\n    showModal: false,\n  };\n\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    let order = 'desc';\n\n    if (this.state.orderBy === property && this.state.order === 'desc') {\n      order = 'asc';\n    }\n\n    this.setState({ order, orderBy });\n  };\n\n  handleClick = (event, name) => {\n    const { countries } = this.props;\n    const payload = {\n      name,\n      countries\n    };\n    this.props.dispatch({ type: GET_COUNTRY, payload });\n    this.setState({ showModal: true })\n  };\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  handleClose = () => {\n    this.setState({ showModal: false });\n  }\n\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\n\n  render() {\n    const { classes } = this.props;\n    const { order, orderBy, rowsPerPage, page } = this.state;\n    const data = createData(this.props.countries);\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n    return (\n      <Fragment>\n        <Paper className={classes.root}>\n          <div className={classes.tableWrapper}>\n            <Table className={classes.table} aria-labelledby=\"tableTitle\" padding=\"dense\">\n              <TableHead\n                order={order}\n                orderBy={orderBy}\n                onRequestSort={this.handleRequestSort}\n                rowCount={data.length}\n              />\n              <TableBody>\n                {stableSort(data, getSorting(order, orderBy))\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map(n => {\n                    const isSelected = this.isSelected(n.id);\n                    return (\n                      <TableRow\n                        hover\n                        onClick={event => this.handleClick(event, n.name)}\n                        role=\"checkbox\"\n                        aria-checked={isSelected}\n                        tabIndex={-1}\n                        key={n.id}\n                        selected={isSelected}\n                      >\n                        <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                          {n.name}\n                        </TableCell>\n                        <TableCell align=\"left\">{n.population}</TableCell>\n                        <TableCell align=\"left\">{n.density}</TableCell>\n                      </TableRow>\n                    );\n                  })}\n                {emptyRows > 0 && (\n                  <TableRow style={{ height: 49 * emptyRows }}>\n                    <TableCell colSpan={6} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </div>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={data.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            backIconButtonProps={{\n              'aria-label': 'Previous Page',\n            }}\n            nextIconButtonProps={{\n              'aria-label': 'Next Page',\n            }}\n            onChangePage={this.handleChangePage}\n            onChangeRowsPerPage={this.handleChangeRowsPerPage}\n          />\n\n          {Object.keys(this.props.country).length ?\n            <Country\n              country={this.props.country}\n              open={this.state.showModal} classes={classes}\n              handleClose={this.handleClose}\n            /> : null}\n        </Paper>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  country: state.country\n});\n\nEnhancedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(EnhancedTable));\n","import React, { Component } from 'react';\nimport { fetchCountries } from '../actions/countries'\nimport { connect } from 'react-redux';\nimport Table from './Table';\n\nclass Countries extends Component {\n  componentDidMount() {\n    this.props.onFetchCountries(this.props.match.params.name)\n  }\n\n  render() {\n    return (\n      <div>\n        <Table countries={this.props.countries} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  countries: state.countries,\n  loader: state.loader\n});\n\nconst mapActionsToProps = {\n  onFetchCountries: fetchCountries\n}\n\n\nexport default connect(mapStateToProps, mapActionsToProps)(Countries)\n","import axios from 'axios';\nimport { FETCH_COUNTRIES } from '../types';\nconst baseURL = 'https://restcountries.eu/rest/v2';\n\nexport let fetchCountries = (region) => {\n  return async dispatch => {\n\n    const endpoint = `${baseURL}/region/${region}`;\n    const res = await axios.get(endpoint);\n\n    dispatch({\n      type: FETCH_COUNTRIES,\n      payload: res.data\n    });\n  }\n}\n","\nimport React, { useCallback } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AppBar from \"@material-ui/core/AppBar\";\n\nconst headerStyles = {\n  bar: {\n    height: 50,\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  }\n};\n\nconst Navbar = withStyles(headerStyles)(({ classes }) => (\n  <Route\n    component={({ match, history }) => (\n      <AppBar className={classes.bar}>\n        <Grid container>\n          <Grid item md={5} xs={2}>\n            {match.path === \"/\" && !match.isExact && (\n              <Button\n                color=\"inherit\"\n                onClick={useCallback(\n                  () => {\n                    history.goBack();\n                  },\n                  [history]\n                )}\n              >\n                <ArrowBackIcon />\n              </Button>\n            )}\n          </Grid>\n          <Grid item xs={10} md={4}>\n            <Typography color=\"inherit\" variant=\"h5\" component=\"h2\">\n              Explore Earth\n            </Typography>\n          </Grid>\n        </Grid>\n      </AppBar>\n    )}\n  />\n));\n\n\nexport default Navbar;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport Countries from './components/Countries.js';\nimport Navbar from './components/Navbar';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Navbar />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/regions/:name\" component={Countries} />\n      </Switch>\n\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { countries, country } from './countries'\n\n\nexport const reducers = combineReducers({\n  countries,\n  country,\n})\n","import { FETCH_COUNTRIES, GET_COUNTRY } from '../types';\n\nexport let countries = (state = [], { type, payload }) => {\n  switch (type) {\n    case FETCH_COUNTRIES:\n      return [...payload];\n    default:\n      return state;\n  }\n}\n\nexport let country = (state = {}, { type, payload }) => {\n  switch (type) {\n    case GET_COUNTRY:      \n      return payload.countries.filter(country => country.name === payload.name)[0];\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { reducers } from './reducers';\n\n\nconst allStoreEnhancers = compose(\n  applyMiddleware(thunk),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport let store = createStore(reducers, allStoreEnhancers)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport { store } from './store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Provider store={store}><Router><App /></Router></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}